---
- hosts: all
  vars:
    mysql_root_password: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits,hexdigits,punctuation') }}"
  become: true
  tasks:
    - name: Install MySQL
      apt: 
        name:
        - 'python3-pymysql'
        - 'mysql-server'
        - 'mysql-client'
        - 'python3-pymysql'
        update_cache: yes 
        cache_valid_time: 3600 
        state: present
    
    - name: Start the MySQL service
      service: 
        name: mysql 
        state: started
        enabled: true
    - name: Modify configuration file to listen on all interfaces
      lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^bind-address" line="bind-address=0.0.0.0"
      notify:
        - Restart MySQL
    #- name: Find temporary password
      #shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | sed 's/.*root@localhost: //'`"
      #register: mysql_root_password_temp
      #tags: register
    #- name: update mysql root password for all root accounts
    #  mysql_user: 
    #    name: root 
    #    host: "{{ item }}" 
    #    password: "{{ mysql_root_password }}"
    #    login_user: root
    #    login_password: ""
    #    check_implicit_admin: yes
    #    priv: "*.*:ALL,GRANT"
    #  with_items:
    #    - "{{ ansible_hostname }}"
    #    - 127.0.0.1
    #    - ::1
    #    - localhost 
    - name: copy cnf
      copy: src=/tmp/.my.cnf dest=~/.my.cnf owner=ubuntu mode=0600
    #- name: Ensure Anonymous user(s) are not in the database
      #mysql_user: name='' host={{ item }} state=absent
      #with_items:
        #- "{{ ansible_hostname }}"
        #- 127.0.0.1
        #- ::1
        #- localhost
    #- name: Remove the test database
      #mysql_db: name=test state=absent
      #notify:
        #- Restart MySQL
  handlers:
  - name: Restart MySQL
    service:
      name: mysql
      state: restarted
